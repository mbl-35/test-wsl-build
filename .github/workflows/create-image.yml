name: create-image

# Default to 'contents: read', which grants actions to read commits.
# If any permission is set, any permission not included in the list is
# implicitly set to "none".
# see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
permissions:
  contents: read

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
      - '[0-9]+.[0-9]+'
      - '[0-9]+.x'
    tags:
      - 'v*'
  pull_request:

env:
  WSL_REPO_SLUG: mbl-35/wsl-registry
  DOCKER_GITCOMMIT: ${{ github.sha }}
  VERSION: ${{ github.ref }}
  APP_DOMAIN: srsrns
  APP_NAME: alpine-docker
  APP_OS_NAME: alpine
  APP_OS_VERSION: "3.20.0"
  SETUP_BUILDX_VERSION: latest
  SETUP_BUILDKIT_IMAGE: moby/buildkit:latest
  
  #VALIDATE_REPO: ${{ github.server_url }}/${{ github.repository }}.git
  #VALIDATE_BRANCH: ${{ steps.base-ref.outputs.result }}

jobs:

  prepare:
    runs-on: ubuntu-22.04
    timeout-minutes: 20 # guardrails timeout for the whole job
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.WSL_REPO_SLUG }}
            
          ### versioning strategy
          ## push semver tag v23.0.0
          # ${{ github.repository }}:23.0.0
          # ${{ github.repository }}:latest
          ## push semver prerelease tag v23.0.0-beta.1
          # ${{ github.repository }}:23.0.0-beta.1
          ## push on master
          # ${{ github.repository }}:master
          ## push on 23.0 branch
          # ${{ github.repository }}:23.0
          ## any push
          # ${{ github.repository }}:sha-ad132f5
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha
      -
        name: Rename meta bake definition file
        # see https://github.com/docker/metadata-action/issues/381#issuecomment-1918607161
        run: |
          bakeFile="${{ steps.meta.outputs.bake-file }}"
          mv "${bakeFile#cwd://}" "/tmp/bake-meta.json"
      -
        name: Upload meta bake definition
        uses: actions/upload-artifact@v4
        with:
          name: bake-meta
          path: /tmp/bake-meta.json
          if-no-files-found: error
          retention-days: 1

  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 120 # guardrails timeout for the whole job
    needs:
      - prepare
    if: always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
    strategy:
      fail-fast: false
    steps:
        -
          name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        -
          name: Download meta bake definition
          uses: actions/download-artifact@v4
          with:
            name: bake-meta
            path: /tmp
        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v3
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
          with:
            version: ${{ env.SETUP_BUILDX_VERSION }}
            driver-opts: image=${{ env.SETUP_BUILDKIT_IMAGE }}
            buildkitd-flags: --debug
        -
          name: Build
          id: bake
          uses: docker/bake-action@v4
          with:
            # ./docker-bake.hcl
            files: |
              /tmp/bake-meta.json
            targets: bin-image
            #*.platform=${{ matrix.platform }}
            set: |
              *.output=type=image,name=${{ env.MOBYBIN_REPO_SLUG }},push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' && github.repository == 'moby/moby' }}
              *.tags=
        -
          name: Export digest
          if: github.event_name != 'pull_request' && github.repository == 'moby/moby'
          run: |
            mkdir -p /tmp/digests
            digest="${{ fromJSON(steps.bake.outputs.metadata)['bin-image']['containerimage.digest'] }}"
            touch "/tmp/digests/${digest#sha256:}"
        -
          name: Upload digest
          if: github.event_name != 'pull_request' && github.repository == 'moby/moby'
          uses: actions/upload-artifact@v4
          with:
            name: digests-${{ env.PLATFORM_PAIR }}
            path: /tmp/digests/*
            if-no-files-found: error
            retention-days: 1

  merge:
    runs-on: ubuntu-20.04
    timeout-minutes: 120 # guardrails timeout for the whole job
    needs:
      - build
    if: always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') && github.event_name != 'pull_request' && github.repository == 'moby/moby'
    steps:
      -
        name: Download meta bake definition
        uses: actions/download-artifact@v4
        with:
          name: bake-meta
          path: /tmp
      -
        name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: ${{ env.SETUP_BUILDX_VERSION }}
          driver-opts: image=${{ env.SETUP_BUILDKIT_IMAGE }}
          buildkitd-flags: --debug
      -
        name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          set -x
          docker buildx imagetools create $(jq -cr '.target."docker-metadata-action".tags | map("-t " + .) | join(" ")' /tmp/bake-meta.json) \
            $(printf '${{ env.MOBYBIN_REPO_SLUG }}@sha256:%s ' *)
      -
        name: Inspect image
        run: |
          set -x
          docker buildx imagetools inspect ${{ env.MOBYBIN_REPO_SLUG }}:$(jq -cr '.target."docker-metadata-action".args.DOCKER_META_VERSION' /tmp/bake-meta.json)
          
